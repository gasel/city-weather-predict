version: '3.9'

networks:
  laravel:
    name: laravel
    driver: bridge
    
services:

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    depends_on:
      - php
      - mysql
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www/html
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./:/var/www/html
    networks:
      - laravel

#  app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: app
#    ports:
#      - "9000:9000"
#    volumes:
#      - .:/var/www
#    environment:
#      - "DB_HOST=db"
#      - "DB_DATABASE=mydatabase"
#      - "DB_USERNAME=myuser"
#      - "DB_PASSWORD=mypassword"
  
  mysql:
    image: mysql:8.0.27
    platform: linux/amd64
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - "MYSQL_DATABASE=mydatabase"
      - "MYSQL_USER=mydbuser"
      - "MYSQL_PASSWORD=mydbpassword"
      - "MYSQL_ROOT_PASSWORD=rootdbpassword"
    networks:
      - laravel
    volumes:
      - ./mysql:/var/lib/mysql

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['php', 'artisan']
    networks:
      - laravel

  npm:
    image: node:current-alpine
    container_name: npm
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

#volumes:
#  dbdata: